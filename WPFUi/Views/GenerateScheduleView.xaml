<UserControl
    x:Class="WPFUi.Views.GenerateScheduleView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:WPFUi.Controls.Components"
    xmlns:controls="clr-namespace:WPFUi.Controls"
    xmlns:converters="clr-namespace:WPFUi.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:xceed="http://schemas.xceed.com/wpf/xaml/toolkit"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converters:MultiBindingConverter x:Key="MultiBindingConverter" />
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />

        <ObjectDataProvider
            x:Key="DayOfWeek"
            MethodName="GetValues"
            ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="system:DayOfWeek" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="18" />
        </Style>
    </UserControl.Resources>

    <Grid Background="#f0f0f0">

        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid
            Grid.Row="0"
            Grid.ColumnSpan="2"
            Height="70"
            Background="{StaticResource MainDarkGreenSolidColorBrush}">
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="35"
                FontWeight="Bold"
                Foreground="#f0f0f0"
                Text="Generate schedule" />
        </Grid>
        <Grid Grid.Row="1" Margin="5">

            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>



            <Grid
                Grid.Row="1"
                Grid.RowSpan="2"
                Grid.Column="0"
                Margin="0,40,10,0">

                <StackPanel Orientation="Vertical">

                    <StackPanel
                        Margin="0,0,0,30"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                        <StackPanel Margin="10,0" Orientation="Horizontal">
                            <TextBlock
                                VerticalAlignment="Center"
                                Style="{StaticResource TextBlockStyle}"
                                Text="Start date: " />
                            <DatePicker SelectedDate="{Binding StartDate, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="{Binding ErrorCollection[StartDate]}" />
                        </StackPanel>
                        <StackPanel Margin="10,0" Orientation="Horizontal">
                            <TextBlock
                                VerticalAlignment="Center"
                                Style="{StaticResource TextBlockStyle}"
                                Text="End date: " />
                            <DatePicker SelectedDate="{Binding EndDate, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ToolTip="{Binding ErrorCollection[EndDate]}" />
                        </StackPanel>

                    </StackPanel>

                    <!--  Time picker  -->
                    <StackPanel
                        Margin="0,0,0,30"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">

                        <!--  TODO: Create own TimePicker  -->

                        <StackPanel Margin="10,0" Orientation="Horizontal">
                            <TextBlock
                                VerticalAlignment="Center"
                                Style="{StaticResource TextBlockStyle}"
                                Text="Start hour: " />
                            <xceed:TimePicker
                                Width="100"
                                ToolTip="{Binding ErrorCollection[StartHour]}"
                                Value="{Binding Path=StartHour, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        </StackPanel>
                        <StackPanel Margin="10,0" Orientation="Horizontal">
                            <TextBlock
                                VerticalAlignment="Center"
                                Style="{StaticResource TextBlockStyle}"
                                Text="End hour: " />
                            <xceed:TimePicker
                                Width="100"
                                ToolTip="{Binding ErrorCollection[EndHour]}"
                                Value="{Binding Path=EndHour, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        </StackPanel>


                    </StackPanel>

                    <StackPanel
                        Margin="0,0,0,30"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">

                        <TextBlock
                            VerticalAlignment="Center"
                            Style="{StaticResource TextBlockStyle}"
                            Text="Time per patient: " />
                        <TextBox
                            Width="50"
                            Text="{Binding MaxTimePerPatient, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, TargetNullValue=''}"
                            TextAlignment="Right"
                            ToolTip="{Binding ErrorCollection[MaxTimePerPatient]}" />
                        <TextBlock
                            Margin="5,0,0,0"
                            Style="{StaticResource TextBlockStyle}"
                            Text="min."
                            TextAlignment="Left" />


                    </StackPanel>

                    <StackPanel
                        Margin="0,0,0,30"
                        HorizontalAlignment="Center"
                        Orientation="Vertical">

                        <TextBlock
                            Margin="0,0,0,5"
                            HorizontalAlignment="Center"
                            Style="{StaticResource TextBlockStyle}"
                            Text="Select days of week: " />

                        <Border
                            HorizontalAlignment="Center"
                            Style="{StaticResource MainDarkBorder}"
                            ToolTip="{Binding ErrorCollection[SelectedDaysOfWeek]}"
                            Validation.ValidationAdornerSiteFor="{Binding SelectedDaysOfWeek, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">

                            <ItemsControl ItemsSource="{Binding Source={StaticResource DayOfWeek}}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <CheckBox
                                            Margin="10"
                                            Command="{Binding Path=DataContext.SelectDaysOfWeekCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                            Content="{Binding}">
                                            <CheckBox.CommandParameter>
                                                <MultiBinding Converter="{StaticResource MultiBindingConverter}">
                                                    <Binding Path="IsChecked" RelativeSource="{RelativeSource Self}" />
                                                    <Binding Path="Content" RelativeSource="{RelativeSource Self}" />
                                                </MultiBinding>
                                            </CheckBox.CommandParameter>
                                        </CheckBox>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                        </Border>

                    </StackPanel>





                </StackPanel>



            </Grid>

            <Grid
                Grid.Row="1"
                Grid.Column="1"
                Margin="10,0,0,0">
                <StackPanel
                    Orientation="Vertical"
                    ToolTip="{Binding ErrorCollection[SelectedDoctor]}"
                    Validation.ValidationAdornerSiteFor="{Binding SelectedDoctor, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                    <!--  Doctor picker  -->
                    <components:DoctorPicker DataContext="{Binding DoctorPicker}" />

                    <StackPanel
                        Margin="0,15,0,30"
                        HorizontalAlignment="Center"
                        Orientation="Vertical">

                        <StackPanel
                            Margin="0,0,0,5"
                            HorizontalAlignment="Center"
                            Orientation="Horizontal">
                            <TextBlock
                                HorizontalAlignment="Center"
                                Style="{StaticResource TextBlockStyle}"
                                Text="Select specialization: " />
                            <Button
                                Width="25"
                                Height="25"
                                Padding="0"
                                Command="{Binding ShowSpecializationFormCommand}"
                                Content="+"
                                Style="{StaticResource MenuBarButton}" />
                        </StackPanel>


                        <!--  Specialization picker  -->
                        <ComboBox
                            Width="250"
                            ItemsSource="{Binding Specializations}"
                            SelectedItem="{Binding SelectedSpecialization, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                            ToolTip="{Binding ErrorCollection[SelectedSpecialization]}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>

                    <!--  Specialization form  -->
                    <Grid Visibility="{Binding IsSpecializationFormVisible, Converter={StaticResource BoolToVisConverter}}">
                        <controls:SpecializationForm DataContext="{Binding SpecializationFormViewModel}" />

                    </Grid>


                </StackPanel>
            </Grid>

            <Grid
                Grid.Row="3"
                Grid.Column="0"
                Margin="0,0,10,0">
                <Button
                    Command="{Binding CancelCommand}"
                    Content="Cancel"
                    Style="{StaticResource MenuBarButton}" />
            </Grid>
            <Grid
                Grid.Row="3"
                Grid.Column="1"
                Margin="10,0,0,0">
                <Button
                    Command="{Binding GenerateScheduleCommand}"
                    Content="Generate"
                    Style="{StaticResource MenuBarButton}" />
            </Grid>
        </Grid>
    </Grid>
</UserControl>
